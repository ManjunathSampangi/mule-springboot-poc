#%RAML 1.0
title: Product Catalog API
version: v1
baseUri: http://localhost:8082/api
mediaType: application/json

types:
  Product:
    type: object
    properties:
      id:
        type: integer
        required: false
      name:
        type: string
        required: true
        minLength: 1
        maxLength: 100
      description:
        type: string
        required: false
        maxLength: 500
      price:
        type: number
        required: true
        minimum: 0
      category:
        type: string
        required: true
        enum: [Electronics, Clothing, Food, Books, Furniture, Other]
      stock:
        type: integer
        required: true
        minimum: 0
      active:
        type: boolean
        required: false
        default: true

/products:
  get:
    description: Get all products
    queryParameters:
      category:
        type: string
        required: false
        description: Filter by category
      active:
        type: boolean
        required: false
        description: Filter by active status
    responses:
      200:
        body:
          application/json:
            type: Product[]
            example: |
              [
                {
                  "id": 1,
                  "name": "Laptop",
                  "description": "High performance laptop",
                  "price": 999.99,
                  "category": "Electronics",
                  "stock": 50,
                  "active": true
                }
              ]
  
  post:
    description: Create a new product
    body:
      application/json:
        type: Product
    responses:
      201:
        body:
          application/json:
            type: Product
      400:
        body:
          application/json:
            example: |
              {
                "message": "Invalid product data"
              }

  /{id}:
    get:
      description: Get product by ID
      responses:
        200:
          body:
            application/json:
              type: Product
        404:
          body:
            application/json:
              example: |
                {
                  "message": "Product not found"
                }
    
    put:
      description: Update product
      body:
        application/json:
          type: Product
      responses:
        200:
          body:
            application/json:
              type: Product
        404:
          body:
            application/json:
              example: |
                {
                  "message": "Product not found"
                }
    
    delete:
      description: Delete product
      responses:
        204:
          description: Product deleted successfully
        404:
          body:
            application/json:
              example: |
                {
                  "message": "Product not found"
                }

/test:
  get:
    description: Test endpoint for health checks
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "message": "Hello from Product API!",
                "status": "OK",
                "timestamp": "2024-01-01T12:00:00Z"
              }